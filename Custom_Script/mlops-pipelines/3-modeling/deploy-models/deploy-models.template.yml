# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Azure Pipeline Template for deploying models to ACI

parameters:
- name: sdkVersion
  type: string
- name: serviceConnection
  type: string
- name: resourceGroup
  type: string
- name: amlWorkspaceName
  type: string
- name: deploymentType
  type: string
- name: amlAksName
  type: string
- name: sortingTags
  type: string
- name: splittingTags
  type: string
- name: webservicePrefix
  type: string
- name: containerSize
  type: string
- name: routingModelName
  type: string
- name: routingModelTagName
  type: string
- name: routingModelTagValue
  type: string
- name: routingServiceName
  type: string


jobs:

- job: deploy_models
  displayName: 'Deploy Models'
  timeoutInMinutes: 0
  steps:

    - task: UsePythonVersion@0
      displayName: 'Use Python 3.7'
      inputs:
        versionSpec: 3.7

    - task: AzureCLI@1
      displayName: 'Deploy Models in Groups'
      inputs:
        azureSubscription: ${{parameters.serviceConnection}}
        scriptLocation: inlineScript
        inlineScript: |
          # Install dependencies
          python -m pip install --upgrade pip && python -m pip install joblib pyyaml azureml-sdk==${{parameters.sdkVersion}}
          # Create/update training pipeline
          deployment_config_path="Custom_Script/mlops-pipelines/3-modeling/deploy-models/"
          deployment_config_file="$deployment_config_path/forecasting-deployment-config-${{parameters.deploymentType}}.yml"
          deploy_script="Custom_Script/mlops-pipelines/scripts/deploy_or_update_models.py"
          python $deploy_script --splitting-tags '${{parameters.splittingTags}}' \
                                --sorting-tags '${{parameters.sortingTags}}' \
                                --routing-model-name '${{parameters.routingModelName}}' \
                                --output 'models_deployed.json' \
                                --deploy-config-file $deployment_config_file \
                                --aks-target '${{parameters.amlAksName}}' \
                                --service-prefix '${{parameters.webservicePrefix}}' \
                                --container-size '${{parameters.containerSize}}' \
                                --subscription-id $(az account show --query id -o tsv) \
                                --resource-group ${{parameters.resourceGroup}} \
                                --workspace-name ${{parameters.amlWorkspaceName}}

    - publish: 'models_deployed.json'
      artifact: modelsdeployed-${{parameters.deploymentType}}
      displayName: 'Publish Models Deployed Artifact'


- job: routing_model
  displayName: 'Register Routing Model'
  dependsOn: deploy_models
  steps:

    - download: current
      artifact: modelsdeployed-${{parameters.deploymentType}}

    - task: AzureCLI@1
      displayName: 'Register Routing Model'
      inputs:
        azureSubscription: ${{parameters.serviceConnection}}
        scriptLocation: inlineScript
        inlineScript: |
          # Install ML extension
          az extension add -n azure-cli-ml
          # Register model
          az ml model register --name ${{parameters.routingModelName}} \
                               --model-path '$(Pipeline.Workspace)/modelsdeployed-${{parameters.deploymentType}}/models_deployed.json' \
                               --tag '${{parameters.routingModelTagName}}=${{parameters.routingModelTagValue}}' \
                               --output-metadata-file routing_model.json \
                               --workspace-name ${{parameters.amlWorkspaceName}} \
                               --resource-group ${{parameters.resourceGroup}}

    - publish: 'routing_model.json'
      artifact: routingmodel-${{parameters.deploymentType}}
      displayName: 'Publish Routing Model Artifact'


- job: routing_webservice
  displayName: 'Deploy Routing Webservice'
  dependsOn: routing_model
  steps:

    - download: current
      artifact: routingmodel-${{parameters.deploymentType}}

    - task: AzureCLI@1
      displayName: 'Deploy Routing Webservice'
      inputs:
        azureSubscription: ${{parameters.serviceConnection}}
        scriptLocation: inlineScript
        inlineScript: |
          # Install ML extension
          az extension add -n azure-cli-ml
          # Deployment config
          deployment_config_path="Custom_Script/mlops-pipelines/3-modeling/deploy-models/"
          if [ "${{parameters.deploymentType}}" == "aci" ]; then
            deployment_params="--deploy-config-file $deployment_config_path/routing-deployment-config-aci.yml"
          elif [ "${{parameters.deploymentType}}" == "aks" ]; then
            deployment_params="--compute-target ${{parameters.amlAksName}} --deploy-config-file $deployment_config_path/routing-deployment-config-aks.yml"
          fi
          # Deploy model
          az ml model deploy $deployment_params \
                             --name ${{parameters.routingServiceName}} \
                             --model-metadata-file '$(Pipeline.Workspace)/routingmodel-${{parameters.deploymentType}}/routing_model.json' \
                             --runtime python \
                             --source-directory Custom_Script/scripts \
                             --entry-script routing_webservice.py \
                             --conda-file routing_webservice.conda.yml \
                             --overwrite \
                             --workspace-name ${{parameters.amlWorkspaceName}} \
                             --resource-group ${{parameters.resourceGroup}}
