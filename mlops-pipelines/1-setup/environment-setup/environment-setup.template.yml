# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.

# Azure Pipeline Template for ML Workspace Setup

parameters:
- name: serviceConnection
  type: string
- name: resourceGroup
  type: string
- name: resourcesLocation
  type: string
- name: amlWorkspaceName
  type: string
- name: amlComputeName
  type: string
- name: aksName
  type: string
- name: aksResourceGroup
  type: string
- name: amlAksName
  type: string


jobs:

- job: aml_compute
  displayName: 'Deploy AML Compute'
  steps:
  - task: AzureResourceGroupDeployment@2
    displayName: 'Deploy AML Compute'
    inputs:
      azureSubscription: ${{parameters.serviceConnection}}
      resourceGroupName: ${{parameters.resourceGroup}}
      location: ${{parameters.resourcesLocation}}
      csmFile: '$(Build.SourcesDirectory)/mlops-pipelines/1-setup/environment-setup/arm-templates/mlcompute.template.json'
      csmParametersFile: '$(Build.SourcesDirectory)/mlops-pipelines/1-setup/environment-setup/arm-templates/mlcompute.parameters.json'
      overrideParameters: '-workspaceName ${{parameters.amlWorkspaceName}} -clusterName ${{parameters.amlComputeName}}'


- job: aml_aks
  condition: and( '${{ parameters.aksName }}', '${{ parameters.aksResourceGroup }}' )
  displayName: 'Attach AKS Target to AML'
  steps:
  - task: AzureCLI@1
    displayName: 'Attach AKS Target to AML'
    inputs:
      azureSubscription: ${{parameters.serviceConnection}}
      scriptLocation: inlineScript
      inlineScript: |
        workspace_params="--workspace-name ${{parameters.amlWorkspaceName}} --resource-group ${{parameters.resourceGroup}}"
        # Install ML extension
        az extension add -n azure-cli-ml
        # Check if AKS target is already attached and attach if not
        az ml computetarget show --name ${{parameters.amlAksName}} $workspace_params
        if [ $? -eq 1 ]; then
          # Get AKS resource id
          aks_id=$(az resource list -n ${{parameters.aksName}} -g ${{parameters.aksResourceGroup}} --query "[0].id" -o tsv)
          # Attach AKS
          az ml computetarget attach aks --name ${{parameters.amlAksName}} --compute-resource-id $aks_id $workspace_params
        fi
